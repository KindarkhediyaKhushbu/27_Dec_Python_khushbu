import Bank as am
from Bank import *

RegistrationInformation = {}
AccountStock = {}

# Customer information lists
customers = {
    "username": [],
    "password": [],
    "contactNo": [],
    "address": [],
    "accountNo": [],
    "accountType": [],
    "accountAmount": [],
    "role": []
}

# Main loop for user role selection
while True:
    print("""
      Choose Your Role
                1). Bank Manager
                2). Customer 
                3). Exit
    """)
    
    choice = int(input("Enter your chosen number (1-3): "))
    
    if choice == 1:
        while True:
            print("""
            1. REGISTER
            2. LOGIN
            3. UPDATE ALL CUSTOMERS
            4. VIEW ALL CUSTOMERS
            5. DELETE A CUSTOMER
            6. EXIT
            """)
            
            action = int(input("Enter your chosen number (1-6): "))
            
            if action == 1:
                print("------- WELCOME TO REGISTER ---------")
                
                class Registration:
                    def get_data(self):
                        self.username = input("Enter Your Username: ")
                        self.password = input("Enter Your Password: ")
                        self.contactNo = input("Enter Your Contact No: ")
                        self.address = input("Enter Your Address: ")
                        self.accountNo = input("Enter Your Account No: ")
                        self.accountType = input("Enter Your Account Type: ")
                        self.accountAmount = input("Enter Your Account Amount: ")
                        self.role = input("Enter your role (Banker or Customer): ")
                        
                    def save_registration(self):
                        RegistrationInformation[self.username] = {
                            "Password": self.password,
                            "Contact No": self.contactNo,
                            "Address": self.address,
                            "Account No": self.accountNo,
                            "Account Type": self.accountType,
                            "Account Amount": self.accountAmount,
                            "Role": self.role
                        }
                        print("Registration Successful")
        
                    def file_saving(self):
                        filename = f"{self.role.capitalize()}_Register.txt"
                        with open(filename, 'a') as file:
                            file.write(str(RegistrationInformation[self.username]) + "\n")
                        print(f"------ REGISTRATION SUCCESSFULLY FOR {self.role.upper()} ------")
                
                reg = Registration()
                reg.get_data()
                reg.save_registration()
                reg.file_saving()
                
            elif action == 2:
                print("__ WELCOME TO LOGIN PAGE __")
                
                class Login:
                    def customer_login(self):
                        password = input("Enter Password: ")
                        account_no = input("Enter Account Number: ")
                        role = input("Enter Role (Manager or Customer): ").lower()

                        file_name = f"{role.capitalize()}_Register.txt"
                        try:
                            with open(file_name, 'r') as file:
                                for line in file:
                                    data = eval(line.strip())
                                    if data["Password"] == password and data["Account No"] == account_no:
                                        print(f"Login Successfully Done As {role.capitalize()}")
                                        return
                                print(f"Invalid {role.capitalize()}")
                        except FileNotFoundError:
                            print(f"{role.capitalize()} register file not found.")
                
                login = Login()
                login.customer_login()
                
            elif action == 3:  # Update All Customers
                class UpdateCustomer:
                    def update(self):
                        username = input("Enter the Username of the Customer to Update: ")
                        if username in RegistrationInformation:
                            print("Current Data:", RegistrationInformation[username])
                            new_username = input("Enter Usename : ")
                            new_password = input("New Password : ")
                            new_contact_no = input("New Contact No: ")
                            new_address = input("New Address : ")
                            new_account_no = input("New Account No : ")
                            new_account_type = input("New Account Type : ")
                            new_account_amount = input("New Account Amount : ")
                            
                            if new_password:
                                RegistrationInformation[username]["Usename"] = new_username
                            if new_password:
                                RegistrationInformation[username]["Password"] = new_password
                            if new_contact_no:
                                RegistrationInformation[username]["Contact No"] = new_contact_no
                            if new_address:
                                RegistrationInformation[username]["Address"] = new_address
                            if new_account_no:
                                RegistrationInformation[username]["Account No"] = new_account_no
                            if new_account_type:
                                RegistrationInformation[username]["Account Type"] = new_account_type
                            if new_account_amount:
                                RegistrationInformation[username]["Account Amount"] = new_account_amount

                            with open("Customer_Register.txt", 'w') as file:
                                for customer in RegistrationInformation.values():
                                    file.write(str(customer) + "\n")

                            print("Customer data updated successfully.")
                        else:
                            print("Customer not found.")

                updater = UpdateCustomer()
                updater.update()
                
            elif action == 4:  # View All Customers
                class ViewCustomer:
                    def view(self):     
                        print("=== View All Customers ===")
                        try:
                            with open("Customer_Register.txt", 'r') as file:
                                for line in file:
                                    data = eval(line.strip())
                                    print(data)
                        except FileNotFoundError:
                            print("Customer register file not found.")

                viewer = ViewCustomer()
                viewer.view()
                            
            elif action == 5:  # Delete a Customer
                class DeleteCustomer:
                    def delete(self):
                        username = input("Enter the Username of the Customer to Delete: ")
                        if username in RegistrationInformation:
                            del RegistrationInformation[username]
                            print(f"Customer {username} deleted successfully.")
                            
                            with open("Customer_Register.txt", 'w') as file:
                                for customer in RegistrationInformation.values():
                                    file.write(str(customer) + "\n")
                            print("Customer file updated.")
                        else:
                            print("Customer not found.")
                
                deleter = DeleteCustomer()
                deleter.delete()     
            
            elif action == 6:
                print("Exiting...")
                break
        
    elif choice == 3:
        print("Exiting the application...")
        break